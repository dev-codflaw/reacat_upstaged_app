{"version":3,"sources":["components/toast/Toast.js","assets/check.svg","assets/error.svg","assets/info.svg","assets/warning.svg","components/modal/LoginModal.js","components/Header.js","components/Footer.js","assets/images/placeholder-100x180.svg","components/card/TournamentCard.js","components/modal/GameModal.js","components/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Toast","props","toastList","position","autoDelete","dismissTime","useState","list","setList","useEffect","interval","setInterval","length","deleteToast","id","clearInterval","listItemIndex","findIndex","e","toastListItem","splice","className","map","toast","i","style","backgroundColor","onClick","src","icon","alt","title","description","LoginModal","show","setShow","handleClose","React","responseFacebook","response","a","localStorage","setItem","JSON","stringify","login","loginType","token","accessToken","email","name","console","log","window","location","reload","responseGoogle","fetch","method","headers","body","profileObj","is_valid","source","fresponseGoogle","variant","btn","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Container","clientId","buttonText","onSuccess","onFailure","appId","fields","callback","Footer","href","isLogin","setIsLogin","setName","checkValue","autoDeleteTime","LogoutButton","user_data","parse","getItem","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","clear","TournamentCard","Card","width","Text","GameModal","setEmail","data","p1","p1_url","p1_id","dt","Row","Col","xs","md","url","height","alert","game","voted_for","MainContainer","CheckLoggedIn","linkText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2af8346.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Toast.css';\n\nconst Toast = props => {\n    const { toastList, position, autoDelete, dismissTime } = props;\n    const [list, setList] = useState(toastList);\n\n    useEffect(() => {\n        setList([...toastList]);\n\n        // eslint-disable-next-line\n    }, [toastList]);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (autoDelete && toastList.length && list.length) {\n                deleteToast(toastList[0].id);\n            }\n        }, dismissTime);\n        \n        return () => {\n            clearInterval(interval);\n        }\n\n        // eslint-disable-next-line\n    }, [toastList, autoDelete, dismissTime, list]);\n\n    const deleteToast = id => {\n        const listItemIndex = list.findIndex(e => e.id === id);\n        const toastListItem = toastList.findIndex(e => e.id === id);\n        list.splice(listItemIndex, 1);\n        toastList.splice(toastListItem, 1);\n        setList([...list]);\n    }\n\n    return (\n        <>\n            <div className={`notification-container ${position}`}>\n                {\n                    list.map((toast, i) =>     \n                        <div \n                            key={i}\n                            className={`notification toast ${position}`}\n                            style={{ backgroundColor: toast.backgroundColor }}\n                        >\n                            <button onClick={() => deleteToast(toast.id)}>\n                                X\n                            </button>\n                            <div className=\"notification-image\">\n                                <img src={toast.icon} alt=\"\" />\n                            </div>\n                            <div>\n                                <p className=\"notification-title\">{toast.title}</p>\n                                <p className=\"notification-message\">\n                                    {toast.description}\n                                </p>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        </>\n    );\n}\n\nToast.propTypes = {\n    toastList: PropTypes.array.isRequired,\n    position: PropTypes.string,\n    autoDelete: PropTypes.bool,\n    dismissTime: PropTypes.number\n}\n\nexport default Toast;\n","export default __webpack_public_path__ + \"static/media/check.d639b7bb.svg\";","export default __webpack_public_path__ + \"static/media/error.f4c49f9a.svg\";","export default __webpack_public_path__ + \"static/media/info.b6c887b0.svg\";","export default __webpack_public_path__ + \"static/media/warning.9bbdb2f3.svg\";","import React, {useState} from 'react'\n// import { Link } from 'react-router-dom'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport Form from 'react-bootstrap/Form'\nimport './LoginModal.css'\n\n\nexport default function LoginModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [name, setName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [error, setError] = React.useState(null);\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.length > 0 && email.length > 0){\n            // alert(`Submitting Name ${name}`)\n            // alert(`Submitting Email ${email}`)\n            const data = {\n                name: name,\n                email: email,\n                login: true,\n                loginType: 'email'\n            }\n            localStorage.setItem('isUserLogged', JSON.stringify(data));\n            handleClose();\n            window.location.reload(false)\n\n        }\n        else{\n            setError('Please enter your name and email');\n            alert(error);\n            alert(JSON.stringify(props));\n        }\n    }\n\n    const responseFacebook = async (response) => {\n        // let fbResponse  = await fbLogin(response.accessToken)\n        // console.log(fbResponse);\n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'facebook',\n          token:response.accessToken,\n          email: response.email,\n          name: response.name,\n        }));\n        // console.log(googleResponse);\n        console.log(response);\n        handleClose();\n        window.location.reload(false)\n\n      }\n      \n\n      \n    const responseGoogle = async(response) => {\n        // let googleResponse  = await googleLogin(response.accessToken)\n        // fetch('http://127.0.0.1:8000/api-v1/voter-create/', {\n        fetch('http://upstage.codflaw.com/api-v1/voter-create/', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: response.profileObj.name,\n            email: response.profileObj.email,\n            is_valid: true,\n            source: 'from google'\n          })\n        }) \n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'google',\n          token:response.accessToken,\n          email: response.profileObj.email,\n          name: response.profileObj.name,\n        }));\n        // console.log(googleResponse);\n \n        console.log(response);\n        console.log(response.profileObj.email);\n        handleClose();\n        window.location.reload(false)\n\n      }\n  \n    const fresponseGoogle = async(response) => {\n\n        console.log(response);\n      }\n\n    \n    return(\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          {props.btn}\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          \n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Container>\n                {/* <Row> */}\n                  {/* <Form onSubmit={handleSubmit}>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.target.value)}/>\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={e => setEmail(e.target.value)}/>\n                  <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                  </Form.Text>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n                  </Form> */}\n                \n                <div className=\"text-center\">\n                    <Button>LOGIN WITH EMAIL</Button>\n                </div><br />\n                <div className=\"text-center\">\n                  <GoogleLogin\n                  clientId=\"17134391804-9ofvalms637k71u7s45gl4i21o1sjp6j.apps.googleusercontent.com\"\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  onSuccess={responseGoogle}\n                  onFailure={fresponseGoogle}\n                  />\n                </div><br />\n                <div className=\"text-center\">\n                  <FacebookLogin\n                  appId=\"296526531782242\"\n                  fields=\"name,email,picture\"\n                  callback={responseFacebook}\n                  />\n                </div><br />\n                \n               \n                {/* </Row> */}\n            </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className=\"\">\n              <a href=\"#\">Terms of Service</a> and \n              <a href=\"#\"> Privacy Policy</a>\n\n            </div>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}","import React, { useState, useEffect } from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Toast from '../components/toast/Toast';\n\nimport checkIcon from '../assets/check.svg';\nimport errorIcon from '../assets/error.svg';\nimport infoIcon from '../assets/info.svg';\nimport warningIcon from '../assets/warning.svg';\nimport Button from '../components/button/Button';\nimport LoginModal from '../components/modal/LoginModal'\n\nconst BUTTON_PROPS = [\n    {\n      id: 1,\n      type: 'success',\n      className: 'success',\n      label: 'Success'\n    },\n    {\n      id: 2,\n      type: 'danger',\n      className: 'danger',\n      label: 'Danger'\n    },\n    {\n      id: 3,\n      type: 'info',\n      className: 'info',\n      label: 'Info'\n    },\n    {\n      id: 4,\n      type: 'warning',\n      className: 'warning',\n      label: 'Warning'\n    },\n  ];\n\n  \nexport default function Header(props){\n    const [list, setList] = useState([]);\n    const [ isLogin, setIsLogin]  = useState(false);\n    const [ name, setName]  = useState();\n    const [position, setPosition] = useState('top-right');\n    let [checkValue, setCheckValue] = useState(true);\n    const [autoDeleteTime, setAutoDeleteTime] = useState(3000);\n    let toastProperties = null;\n\n    const showToast = type => {\n    const id = Math.floor((Math.random() * 101) + 1);\n\n    switch(type) {\n      case 'success':\n        toastProperties = {\n          id,\n          title: 'Success',\n          description: 'This is a success toast component',\n          backgroundColor: '#5cb85c',\n          icon: checkIcon\n        }\n        break;\n      case 'danger':\n        toastProperties = {\n          id,\n          title: 'Danger',\n          description: 'This is a error toast component',\n          backgroundColor: '#d9534f',\n          icon: errorIcon\n        }\n        break;\n      case 'info':\n        toastProperties = {\n          id,\n          title: 'Info',\n          description: 'This is an info toast component',\n          backgroundColor: '#5bc0de',\n          icon: infoIcon\n        }\n        break;\n      case 'warning':\n        toastProperties = {\n          id,\n          title: 'Warning',\n          description: 'This is a warning toast component',\n          backgroundColor: '#f0ad4e',\n          icon: warningIcon\n        }\n        break;\n\n        default:\n          setList([]);\n    }\n\n    setList([...list, toastProperties]);\n    }\n    \n    useEffect(() => {\n      const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n      if(user_data && user_data.login){\n        setIsLogin(user_data.login);\n        setName(user_data.name);\n      }\n\n    });\n\n\n    function LogoutButton(props) {\n      return (\n        <button onClick={props.onClick}>\n          Logout\n        </button>\n      );\n    }\n    \n    function handleLogoutClick(){\n      localStorage.clear('isUserLogged');\n      window.location.reload(false)\n    }\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">Home</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n\n\n            </Nav>\n            <Nav>\n            <Nav.Link href=\"#\">{name}</Nav.Link>\n            <Nav.Link href=\"#\">\n              {isLogin\n              ? <LogoutButton onClick={handleLogoutClick} />\n              : < ></>\n            }\n            </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n            {/* < LoginModal /> */}\n\n            {/* <div className=\"toast-buttons\">\n            {\n                BUTTON_PROPS.map(e => \n                    <Button \n                        key={e.id}\n                        className={`${position === 'Select Position' ? `${e.className} btn-disable` : `${e.className}`}`}\n                        label={e.label}\n                        handleClick={() => showToast(e.type)}\n                    />\n                )\n            }\n            </div> */}\n            \n            <Toast \n                toastList={list}\n                position={position}\n                autoDelete={checkValue}\n                dismissTime={autoDeleteTime}\n            />\n        </>\n    );\n  }\n\n\n\n","import React from 'react';\n\n\n  \nexport default function Footer(props){    \n    return (\n        <>\n   \n        <div>\n            Footer\n        </div>\n        </>\n    );\n  }\n\n\n\n","export default __webpack_public_path__ + \"static/media/placeholder-100x180.86cb4220.svg\";","import Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport PlaceholderImg from '../../assets/images/placeholder-100x180.svg'\n\nexport default function TournamentCard(props){    \n    return (\n        <>\n            <Card style={{ width: '70rem' }}>\n            {/* <Card.Img variant=\"top\" src={PlaceholderImg}/> */}\n            <Card.Body>\n            <Card.Title>{props.name}</Card.Title>\n            <Card.Text>\n            {props.description}\n            </Card.Text>\n            {/* <Button variant=\"primary\">{props.linkText}</Button> */}\n            </Card.Body>\n            </Card>\n        </>\n    );\n  }\n   \n\n\n","import React, {useState, useEffect} from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport ReactPlayer from 'react-player/youtube'\n\n\nexport default function GameModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [ isLogin, setIsLogin]  = useState(false);\n    const [ email, setEmail]  = useState();\n\n    const data = [{p1:'Team A', p1_url:'https://www.youtube.com/watch?v=ysz5S6PUM-U', p1_id:1}];\n\n    console.log(data.map((dt) => dt.p1_url));\n\n\n    function handleVoteSubmitForP2(){\n      alert('Vote P2');\n      // fetch('http://127.0.0.1:8000/api-v1/vote-register/', {\n      fetch('http://upstage.codflaw.com/api-v1/vote-register/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          game: '1',\n          voted_for: '#2 Team B',\n          email: email,\n          is_valid: true,\n          source: 'from google'\n        })\n      }) \n      \n    }\n\n    function handleVoteSubmitForP1(){\n      alert('Vote P1');\n      // fetch('http://127.0.0.1:8000/api-v1/vote-register/', {\n      fetch('http://upstage.codflaw.com/api-v1/vote-register/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          game: '1',\n          voted_for: '#1 Team A',\n          email: email,\n          is_valid: true,\n          source: 'from google'\n        })\n      }) \n      \n    }\n    useEffect(() => {\n      const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n      if(user_data && user_data.login){\n        setIsLogin(user_data.login);\n        setEmail(user_data.email);\n      }\n\n    });\n\n    return(\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          {props.btn}\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          \n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Game #1</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Container>\n              \n          <Row>\n            <Col xs={5} md={5}>\n              <ReactPlayer \n                className =\"react-player\" \n                url={data.map((dt) => dt.p1_url)}\n                width='100%'\n                height='70%'\n              />\n              Team A <br />\n              <button onClick={handleVoteSubmitForP1}>\n                Vote\n              </button>\n            </Col>\n            <Col md={2}>\n              <div className=\"text-center\">\n                <h1>VS</h1>\n              </div>\n            </Col>\n            <Col xs={5} md={5}>\n              <ReactPlayer \n                className =\"react-player\" \n                url='https://www.youtube.com/watch?v=ysz5S6PUM-U' \n                width='100%'\n                height='70%'\n              />\n              Team B  <br />\n              <button onClick={handleVoteSubmitForP2}>\n                Vote\n              </button>\n            </Col>\n          </Row>\n        </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            {/* <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button> */}\n            {/* <Button variant=\"primary\">Understood</Button> */}\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}","import Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Card from './card/TournamentCard'\nimport GameModal from './modal/GameModal'\nimport LoginModal from './modal/LoginModal'\n// import { useState } from 'react'\n\n\nexport default function MainContainer(props){   \n\n    function CheckLoggedIn(props) {\n        const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n        if(user_data && user_data.login){\n            return <GameModal btn={'Vote'}/>;\n        }\n        return <LoginModal btn={'Vote'}/>;\n      }\n\n      \n    return (\n        <>\n            <Container>\n                <Row>\n                        <Card \n                        name=\"Tournament Name\"\n                        description=\"UpStagedAID One World Every Student Voice COLLEGE A CAPPELLA CHAMPIONSHIPS\"\n                        linkText=\"View\"\n                        />\n                </Row>\n                < CheckLoggedIn />\n            </Container>\n\n        </>\n    );\n  }\n\n\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport './App.css';\nimport MainContainer from './components/MainContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}