[{"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/index.js":"1","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Footer.js":"2","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/button/Button.js":"3","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/card/TournamentCard.js":"4","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/Toast.js":"5","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/LoginModal.js":"6","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/GameModal.js":"7","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/App.js":"8","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Header.js":"9","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/reportWebVitals.js":"10","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/MainContainer.js":"11","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/SimpleSnackbar.js":"12"},{"size":500,"mtime":1607993162423,"results":"13","hashOfConfig":"14"},{"size":189,"mtime":1610027475146,"results":"15","hashOfConfig":"14"},{"size":511,"mtime":1608005294198,"results":"16","hashOfConfig":"14"},{"size":647,"mtime":1608099278870,"results":"17","hashOfConfig":"14"},{"size":2363,"mtime":1608060912790,"results":"18","hashOfConfig":"14"},{"size":6209,"mtime":1610083163942,"results":"19","hashOfConfig":"14"},{"size":4598,"mtime":1610083269557,"results":"20","hashOfConfig":"14"},{"size":365,"mtime":1610032166224,"results":"21","hashOfConfig":"14"},{"size":1308,"mtime":1610031905973,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":1607993162423,"results":"23","hashOfConfig":"14"},{"size":1002,"mtime":1610032196108,"results":"24","hashOfConfig":"14"},{"size":1230,"mtime":1610044197853,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"tbr00o",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/index.js",[],["61","62"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Footer.js",[],["63","64"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/button/Button.js",[],["65","66"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/card/TournamentCard.js",["67","68"],"import Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport PlaceholderImg from '../../assets/images/placeholder-100x180.svg'\n\nexport default function TournamentCard(props){    \n    return (\n        <>\n            <Card style={{ width: '70rem' }}>\n            {/* <Card.Img variant=\"top\" src={PlaceholderImg}/> */}\n            <Card.Body>\n            <Card.Title>{props.name}</Card.Title>\n            <Card.Text>\n            {props.description}\n            </Card.Text>\n            {/* <Button variant=\"primary\">{props.linkText}</Button> */}\n            </Card.Body>\n            </Card>\n        </>\n    );\n  }\n   \n\n\n","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/Toast.js",[],["69","70"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/LoginModal.js",["71","72","73","74","75","76","77","78","79"],"import React, {useState} from 'react'\n// import { Link } from 'react-router-dom'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport Form from 'react-bootstrap/Form'\nimport './LoginModal.css'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport axios from 'axios'\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function LoginModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [name, setName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [error, setError] = React.useState(null);\n    const [open, setOpen] = React.useState(false);\n    const time = 6000;\n    const close = () => setOpen(false)\n    const [message, setMessage] = React.useState(\"\")\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.length > 0 && email.length > 0){\n            // alert(`Submitting Name ${name}`)\n            // alert(`Submitting Email ${email}`)\n            const data = {\n                name: name,\n                email: email,\n                login: true,\n                loginType: 'email'\n            }\n            localStorage.setItem('isUserLogged', JSON.stringify(data));\n            handleClose();\n            window.location.reload()\n\n        }\n        else{\n            setError('Please enter your name and email');\n            alert(error);\n            alert(JSON.stringify(props));\n        }\n    }\n\n    const responseFacebook = async (response) => {\n        // let fbResponse  = await fbLogin(response.accessToken)\n        // console.log(fbResponse);\n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'facebook',\n          token:response.accessToken,\n          email: response.email,\n          name: response.name,\n        }));\n        // console.log(googleResponse);\n        console.log(response);\n        handleClose();\n        window.location.reload()\n\n      }\n      \n\n      \n    const responseGoogle = async(response) => {\n        // let googleResponse  = await googleLogin(response.accessToken)\n\n        axios({\n          method: 'post',\n          url : 'https://upstage.codflaw.com/api-v1/voter-create/',\n          headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'},\n          data: JSON.stringify({\n            name: response.profileObj.name,\n            email: response.profileObj.email,\n            is_valid: true,\n            source: 'from google'\n          }) \n        }).then(res=> {\n          console.log(res);\n          console.log(res.data);\n          // console.log(res.data['msg']);\n          setMessage(res.data['msg'])\n          setOpen(true)\n          handleClose();\n          window.location.reload();\n\n        }).catch(error => {\n          console.log(error);\n        });\n\n\n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'google',\n          token:response.accessToken,\n          email: response.profileObj.email,\n          name: response.profileObj.name,\n        }));\n        // console.log(googleResponse);\n \n        // console.log(response);\n        // console.log(response.profileObj.email);\n        // handleClose();\n\n      }\n  \n    const fresponseGoogle = async(response) => {\n        console.log(response);\n      }\n\n    \n    return(\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          {props.btn}\n        </Button>\n\n        <Snackbar open={open} autoHideDuration={time} onClose={close}>\n          <Alert onClose={close} severity=\"success\">\n            {message}\n          </Alert>\n        </Snackbar>\n        \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          \n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Container>\n                {/* <Row> */}\n                  {/* <Form onSubmit={handleSubmit}>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.target.value)}/>\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={e => setEmail(e.target.value)}/>\n                  <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                  </Form.Text>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n                  </Form> */}\n                \n                {/* <div className=\"text-center\">\n                    <Button>LOGIN WITH EMAIL</Button>\n                </div><br /> */}\n                <div className=\"text-center\">\n                    <GoogleLogin\n                    clientId=\"17134391804-9ofvalms637k71u7s45gl4i21o1sjp6j.apps.googleusercontent.com\"\n                    buttonText=\"LOGIN WITH GOOGLE\"\n                    onSuccess={responseGoogle}\n                    onFailure={fresponseGoogle}\n                    />\n                </div><br />\n                <div className=\"text-center\">\n                    {/* <FacebookLogin\n                    appId=\"296526531782242\"\n                    fields=\"name,email,picture\"\n                    callback={responseFacebook}\n                    /> */}\n                </div><br />\n                \n               \n                {/* </Row> */}\n            </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className=\"\">\n              <a href=\"#\">Terms of Service</a> and \n              <a href=\"#\"> Privacy Policy</a>\n            </div>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/GameModal.js",["80","81"],"import React, {useState, useEffect} from 'react'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport ReactPlayer from 'react-player/youtube'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport axios from 'axios'\nimport MuiAlert from '@material-ui/lab/Alert';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function GameModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [ isLogin, setIsLogin]  = useState(false);\n    const [ email, setEmail]  = useState();\n\n    const [open, setOpen] = React.useState(false);\n    const time = 6000;\n    const close = () => setOpen(false)\n    const [message, setMessage] = React.useState(\"\")\n\n    const data = [{p1:'Team A', p1_url:'https://www.youtube.com/watch?v=ysz5S6PUM-U', p1_id:1}];\n\n    console.log(data.map((dt) => dt.p1_url));\n\n\n    function handleVoteSubmitForP2(){\n      // alert('Vote P2');\n      axios({\n        method: 'post',\n        url : 'https://upstage.codflaw.com/api-v1/vote-register/',\n        headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'},\n        data: JSON.stringify({\n          game: '1',\n          voted_for: '#2 Team B',\n          email : email,\n        }) \n      }).then(res=> {\n        console.log(res);\n        console.log(res.data);\n        // console.log(res.data['msg']);\n        setMessage(res.data['msg'])\n        setOpen(true)\n        handleClose();\n        // window.location.reload();\n\n      }).catch(error => {\n        console.log(error);\n      });\n      \n    }\n\n    function handleVoteSubmitForP1(){\n      // alert('Vote P1');\n      axios({\n        method: 'post',\n        url : 'https://upstage.codflaw.com/api-v1/vote-register/',\n        headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'},\n        data: JSON.stringify({\n          game: '1',\n          voted_for: '#1 Team A',\n          email : email,\n        }) \n      }).then(res=> {\n        console.log(res);\n        console.log(res.data);\n        // console.log(res.data['msg']);\n        setMessage(res.data['msg'])\n        setOpen(true)\n        handleClose();\n        // window.location.reload();\n\n      }).catch(error => {\n        console.log(error);\n      });\n\n    }\n\n    useEffect(() => {\n      const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n      if(user_data && user_data.login){\n        setIsLogin(user_data.login);\n        setEmail(user_data.email);\n      }\n\n    });\n\n    return(\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          {props.btn}\n        </Button>\n\n        <Snackbar open={open} autoHideDuration={time} onClose={close}>\n          <Alert onClose={close} severity=\"success\">\n            {message}\n          </Alert>\n        </Snackbar>\n\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          \n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Game #1</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Container>\n              \n          <Row>\n            <Col xs={5} md={5}>\n              <ReactPlayer \n                className =\"react-player\" \n                url={data.map((dt) => dt.p1_url)}\n                width='100%'\n                height='70%'\n              />\n              Team A <br />\n              <button onClick={handleVoteSubmitForP1}>\n                Vote\n              </button>\n            </Col>\n            <Col md={2}>\n              <div className=\"text-center\">\n                <h1>VS</h1>\n              </div>\n            </Col>\n            <Col xs={5} md={5}>\n              <ReactPlayer \n                className =\"react-player\" \n                url='https://www.youtube.com/watch?v=ysz5S6PUM-U' \n                width='100%'\n                height='70%'\n              />\n              Team B  <br />\n              <button onClick={handleVoteSubmitForP2}>\n                Vote\n              </button>\n            </Col>\n          </Row>\n        </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            {/* <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button> */}\n            {/* <Button variant=\"primary\">Understood</Button> */}\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/App.js",["82"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport './App.css';\nimport MainContainer from './components/MainContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainContainer />\n      {/* <Footer /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Header.js",["83"],"import React, { useState, useEffect } from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nexport default function Header(props){\n    const [ isLogin, setIsLogin]  = useState(false);\n    const [ name, setName]  = useState();\n    \n    useEffect(() => {\n      const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n\n      if(user_data && user_data.login){\n        setIsLogin(user_data.login);\n        setName(user_data.name);\n      }\n\n    });\n\n    const handleLogoutClick = () => {\n        localStorage.clear('isUserLogged');\n        window.location.reload();\n    }\n    \n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n              <Navbar.Brand href=\"#\">Home</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\"> </Nav>\n                <Nav>\n                  <Nav.Link href=\"#\">{name}</Nav.Link>\n                  <Nav.Link href=\"#\">\n                    { isLogin ? <button onClick={handleLogoutClick} >Logout</button>: < ></> }\n                  </Nav.Link>\n                </Nav>\n              </Navbar.Collapse>\n            </Navbar>\n        </>\n    );\n  }\n\n\n\n",["84","85"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/reportWebVitals.js",[],["86","87"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/MainContainer.js",[],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/SimpleSnackbar.js",["88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"89","replacedBy":"95"},{"ruleId":"91","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":22},{"ruleId":"89","replacedBy":"102"},{"ruleId":"91","replacedBy":"103"},{"ruleId":"97","severity":1,"message":"104","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":11},{"ruleId":"97","severity":1,"message":"105","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":21},{"ruleId":"97","severity":1,"message":"106","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"97","severity":1,"message":"107","line":25,"column":18,"nodeType":"99","messageId":"100","endLine":25,"endColumn":25},{"ruleId":"97","severity":1,"message":"108","line":26,"column":19,"nodeType":"99","messageId":"100","endLine":26,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":33,"column":11,"nodeType":"99","messageId":"100","endLine":33,"endColumn":23},{"ruleId":"97","severity":1,"message":"110","line":56,"column":11,"nodeType":"99","messageId":"100","endLine":56,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":185,"column":15,"nodeType":"113","endLine":185,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":186,"column":15,"nodeType":"113","endLine":186,"endColumn":27},{"ruleId":"97","severity":1,"message":"114","line":24,"column":13,"nodeType":"99","messageId":"100","endLine":24,"endColumn":20},{"ruleId":"115","severity":1,"message":"116","line":89,"column":5,"nodeType":"99","endLine":89,"endColumn":14,"suggestions":"117"},{"ruleId":"97","severity":1,"message":"118","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":11,"column":5,"nodeType":"99","endLine":11,"endColumn":14,"suggestions":"119"},{"ruleId":"89","replacedBy":"120"},{"ruleId":"91","replacedBy":"121"},{"ruleId":"89","replacedBy":"122"},{"ruleId":"91","replacedBy":"123"},{"ruleId":"97","severity":1,"message":"124","line":8,"column":10,"nodeType":"99","messageId":"100","endLine":8,"endColumn":14},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],["125"],["126"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PlaceholderImg' is defined but never used.",["125"],["126"],"'Row' is defined but never used.","'FacebookLogin' is defined but never used.","'Form' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'responseFacebook' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["127"],"'Footer' is defined but never used.",["128"],["125"],["126"],["125"],["126"],"'open' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},"Add dependencies array: []",{"range":"132","text":"133"},{"range":"134","text":"133"},[2726,2726],", []",[499,499]]