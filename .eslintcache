[{"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/index.js":"1","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Footer.js":"2","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/button/Button.js":"3","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/card/TournamentCard.js":"4","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/Toast.js":"5","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/LoginModal.js":"6","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/GameModal.js":"7","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/App.js":"8","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Header.js":"9","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/reportWebVitals.js":"10"},{"size":500,"mtime":1607993162423,"results":"11","hashOfConfig":"12"},{"size":177,"mtime":1608012851618,"results":"13","hashOfConfig":"12"},{"size":511,"mtime":1608005294198,"results":"14","hashOfConfig":"12"},{"size":647,"mtime":1608099278870,"results":"15","hashOfConfig":"12"},{"size":2363,"mtime":1608060912790,"results":"16","hashOfConfig":"12"},{"size":5339,"mtime":1609784366443,"results":"17","hashOfConfig":"12"},{"size":3713,"mtime":1609827113191,"results":"18","hashOfConfig":"12"},{"size":357,"mtime":1608056289745,"results":"19","hashOfConfig":"12"},{"size":4314,"mtime":1608189567657,"results":"20","hashOfConfig":"12"},{"size":362,"mtime":1607993162423,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"tbr00o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/index.js",[],["50","51"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Footer.js",[],["52","53"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/button/Button.js",[],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/card/TournamentCard.js",["54","55"],"import Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport PlaceholderImg from '../../assets/images/placeholder-100x180.svg'\n\nexport default function TournamentCard(props){    \n    return (\n        <>\n            <Card style={{ width: '70rem' }}>\n            {/* <Card.Img variant=\"top\" src={PlaceholderImg}/> */}\n            <Card.Body>\n            <Card.Title>{props.name}</Card.Title>\n            <Card.Text>\n            {props.description}\n            </Card.Text>\n            {/* <Button variant=\"primary\">{props.linkText}</Button> */}\n            </Card.Body>\n            </Card>\n        </>\n    );\n  }\n   \n\n\n",["56","57"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/toast/Toast.js",[],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/LoginModal.js",["58","59","60","61","62","63","64"],"import React, {useState} from 'react'\n// import { Link } from 'react-router-dom'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport Form from 'react-bootstrap/Form'\nimport './LoginModal.css'\n\n\nexport default function LoginModal(props) {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [name, setName] = React.useState(\"\");\n    const [email, setEmail] = React.useState(\"\");\n    const [error, setError] = React.useState(null);\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if(name.length > 0 && email.length > 0){\n            // alert(`Submitting Name ${name}`)\n            // alert(`Submitting Email ${email}`)\n            const data = {\n                name: name,\n                email: email,\n                login: true,\n                loginType: 'email'\n            }\n            localStorage.setItem('isUserLogged', JSON.stringify(data));\n            handleClose();\n            window.location.reload(false)\n\n        }\n        else{\n            setError('Please enter your name and email');\n            alert(error);\n            alert(JSON.stringify(props));\n        }\n    }\n\n    const responseFacebook = async (response) => {\n        // let fbResponse  = await fbLogin(response.accessToken)\n        // console.log(fbResponse);\n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'facebook',\n          token:response.accessToken,\n          email: response.email,\n          name: response.name,\n        }));\n        // console.log(googleResponse);\n        console.log(response);\n        handleClose();\n        window.location.reload(false)\n\n      }\n      \n\n      \n    const responseGoogle = async(response) => {\n        // let googleResponse  = await googleLogin(response.accessToken)\n        fetch('http://127.0.0.1:8000/api-v1/voter-create/', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: response.profileObj.name,\n            email: response.profileObj.email,\n            is_valid: true,\n            source: 'from google'\n          })\n        }) \n        localStorage.setItem('isUserLogged', JSON.stringify({\n          login:true,\n          loginType: 'google',\n          token:response.accessToken,\n          email: response.profileObj.email,\n          name: response.profileObj.name,\n        }));\n        // console.log(googleResponse);\n \n        console.log(response);\n        console.log(response.profileObj.email);\n        handleClose();\n        window.location.reload(false)\n\n      }\n  \n    const fresponseGoogle = async(response) => {\n\n        console.log(response);\n      }\n\n    \n    return(\n        <>\n        <Button variant=\"primary\" onClick={handleShow}>\n          {props.btn}\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          \n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Container>\n                {/* <Row> */}\n                  {/* <Form onSubmit={handleSubmit}>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter Name\" value={name} onChange={e => setName(e.target.value)}/>\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" placeholder=\"Enter Email\" value={email} onChange={e => setEmail(e.target.value)}/>\n                  <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                  </Form.Text>\n                  <Button variant=\"primary\" type=\"submit\">\n                      Submit\n                  </Button>\n                  </Form> */}\n                \n                <div className=\"text-center\">\n                    <Button>LOGIN WITH EMAIL</Button>\n                </div><br />\n                <div className=\"text-center\">\n                  <GoogleLogin\n                  clientId=\"17134391804-9ofvalms637k71u7s45gl4i21o1sjp6j.apps.googleusercontent.com\"\n                  buttonText=\"LOGIN WITH GOOGLE\"\n                  onSuccess={responseGoogle}\n                  onFailure={fresponseGoogle}\n                  />\n                </div><br />\n                <div className=\"text-center\">\n                  <FacebookLogin\n                  appId=\"296526531782242\"\n                  fields=\"name,email,picture\"\n                  callback={responseFacebook}\n                  />\n                </div><br />\n                \n               \n                {/* </Row> */}\n            </Container>\n          </Modal.Body>\n          <Modal.Footer>\n            <div className=\"\">\n              <a href=\"#\">Terms of Service</a> and \n              <a href=\"#\"> Privacy Policy</a>\n\n            </div>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n}",["65","66"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/modal/GameModal.js",["67","68"],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/App.js",[],"/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/components/Header.js",["69","70","71","72","73","74","75","76"],"import React, { useState, useEffect } from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Toast from '../components/toast/Toast';\n\nimport checkIcon from '../assets/check.svg';\nimport errorIcon from '../assets/error.svg';\nimport infoIcon from '../assets/info.svg';\nimport warningIcon from '../assets/warning.svg';\nimport Button from '../components/button/Button';\nimport LoginModal from '../components/modal/LoginModal'\n\nconst BUTTON_PROPS = [\n    {\n      id: 1,\n      type: 'success',\n      className: 'success',\n      label: 'Success'\n    },\n    {\n      id: 2,\n      type: 'danger',\n      className: 'danger',\n      label: 'Danger'\n    },\n    {\n      id: 3,\n      type: 'info',\n      className: 'info',\n      label: 'Info'\n    },\n    {\n      id: 4,\n      type: 'warning',\n      className: 'warning',\n      label: 'Warning'\n    },\n  ];\n\n  \nexport default function Header(props){\n    const [list, setList] = useState([]);\n    const [ isLogin, setIsLogin]  = useState(false);\n    const [ name, setName]  = useState();\n    const [position, setPosition] = useState('top-right');\n    let [checkValue, setCheckValue] = useState(true);\n    const [autoDeleteTime, setAutoDeleteTime] = useState(3000);\n    let toastProperties = null;\n\n    const showToast = type => {\n    const id = Math.floor((Math.random() * 101) + 1);\n\n    switch(type) {\n      case 'success':\n        toastProperties = {\n          id,\n          title: 'Success',\n          description: 'This is a success toast component',\n          backgroundColor: '#5cb85c',\n          icon: checkIcon\n        }\n        break;\n      case 'danger':\n        toastProperties = {\n          id,\n          title: 'Danger',\n          description: 'This is a error toast component',\n          backgroundColor: '#d9534f',\n          icon: errorIcon\n        }\n        break;\n      case 'info':\n        toastProperties = {\n          id,\n          title: 'Info',\n          description: 'This is an info toast component',\n          backgroundColor: '#5bc0de',\n          icon: infoIcon\n        }\n        break;\n      case 'warning':\n        toastProperties = {\n          id,\n          title: 'Warning',\n          description: 'This is a warning toast component',\n          backgroundColor: '#f0ad4e',\n          icon: warningIcon\n        }\n        break;\n\n        default:\n          setList([]);\n    }\n\n    setList([...list, toastProperties]);\n    }\n    \n    useEffect(() => {\n      const user_data = JSON.parse(localStorage.getItem('isUserLogged'));\n      if(user_data && user_data.login){\n        setIsLogin(user_data.login);\n        setName(user_data.name);\n      }\n\n    });\n\n\n    function LogoutButton(props) {\n      return (\n        <button onClick={props.onClick}>\n          Logout\n        </button>\n      );\n    }\n    \n    function handleLogoutClick(){\n      localStorage.clear('isUserLogged');\n      window.location.reload(false)\n    }\n    return (\n        <>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">Home</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n\n\n            </Nav>\n            <Nav>\n            <Nav.Link href=\"#\">{name}</Nav.Link>\n            <Nav.Link href=\"#\">\n              {isLogin\n              ? <LogoutButton onClick={handleLogoutClick} />\n              : < ></>\n            }\n            </Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n            {/* < LoginModal /> */}\n\n            {/* <div className=\"toast-buttons\">\n            {\n                BUTTON_PROPS.map(e => \n                    <Button \n                        key={e.id}\n                        className={`${position === 'Select Position' ? `${e.className} btn-disable` : `${e.className}`}`}\n                        label={e.label}\n                        handleClick={() => showToast(e.type)}\n                    />\n                )\n            }\n            </div> */}\n            \n            <Toast \n                toastList={list}\n                position={position}\n                autoDelete={checkValue}\n                dismissTime={autoDeleteTime}\n            />\n        </>\n    );\n  }\n\n\n\n","/home/jarvis/Desktop/codehouse/react_apps/react_sample_app_upstaged/src/reportWebVitals.js",[],["77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":14},{"ruleId":"85","severity":1,"message":"89","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"79","replacedBy":"90"},{"ruleId":"81","replacedBy":"91"},{"ruleId":"85","severity":1,"message":"92","line":5,"column":8,"nodeType":"87","messageId":"88","endLine":5,"endColumn":11},{"ruleId":"85","severity":1,"message":"93","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":12},{"ruleId":"85","severity":1,"message":"94","line":18,"column":18,"nodeType":"87","messageId":"88","endLine":18,"endColumn":25},{"ruleId":"85","severity":1,"message":"95","line":19,"column":19,"nodeType":"87","messageId":"88","endLine":19,"endColumn":27},{"ruleId":"85","severity":1,"message":"96","line":23,"column":11,"nodeType":"87","messageId":"88","endLine":23,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":159,"column":15,"nodeType":"99","endLine":159,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":160,"column":15,"nodeType":"99","endLine":160,"endColumn":27},{"ruleId":"79","replacedBy":"100"},{"ruleId":"81","replacedBy":"101"},{"ruleId":"85","severity":1,"message":"102","line":16,"column":13,"nodeType":"87","messageId":"88","endLine":16,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":63,"column":5,"nodeType":"87","endLine":63,"endColumn":14,"suggestions":"105"},{"ruleId":"85","severity":1,"message":"86","line":11,"column":8,"nodeType":"87","messageId":"88","endLine":11,"endColumn":14},{"ruleId":"85","severity":1,"message":"106","line":12,"column":8,"nodeType":"87","messageId":"88","endLine":12,"endColumn":18},{"ruleId":"85","severity":1,"message":"107","line":14,"column":7,"nodeType":"87","messageId":"88","endLine":14,"endColumn":19},{"ruleId":"85","severity":1,"message":"108","line":46,"column":22,"nodeType":"87","messageId":"88","endLine":46,"endColumn":33},{"ruleId":"85","severity":1,"message":"109","line":47,"column":22,"nodeType":"87","messageId":"88","endLine":47,"endColumn":35},{"ruleId":"85","severity":1,"message":"110","line":48,"column":28,"nodeType":"87","messageId":"88","endLine":48,"endColumn":45},{"ruleId":"85","severity":1,"message":"111","line":51,"column":11,"nodeType":"87","messageId":"88","endLine":51,"endColumn":20},{"ruleId":"103","severity":1,"message":"104","line":99,"column":5,"nodeType":"87","endLine":99,"endColumn":14,"suggestions":"112"},{"ruleId":"79","replacedBy":"113"},{"ruleId":"81","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'PlaceholderImg' is defined but never used.",["115"],["116"],"'Row' is defined but never used.","'Form' is defined but never used.","'setName' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["115"],["116"],"'isLogin' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["117"],"'LoginModal' is defined but never used.","'BUTTON_PROPS' is assigned a value but never used.","'setPosition' is assigned a value but never used.","'setCheckValue' is assigned a value but never used.","'setAutoDeleteTime' is assigned a value but never used.","'showToast' is assigned a value but never used.",["118"],["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"119","fix":"121"},"Add dependencies array: []",{"range":"122","text":"123"},{"range":"124","text":"123"},[2025,2025],", []",[2659,2659]]